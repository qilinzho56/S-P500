# -*- coding: utf-8 -*-
"""scaper.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hzLDvVWpE9qSdHqsT5hLYVG2o1PCsogL
"""

import requests
import lxml.html
import pandas as pd
import re
from datetime import date


def headlines(headers, company_list, max_days):
    """
    Scrape the stock page of each company and reformat the date information
    from http://finviz.com.

    Parameters
    ----------
    headers: HTTP header
    company_list: a list of companies of interest
    max_days: days that the user want to scrape util the current date

    Returns
    -------
    df: a dataframe including the date, time, company, headline and and url link
    """
    data = []
    date_pattern = re.compile(r"[A-Za-z]+")

    for company in company_list:
        company_url = headers["Referer"] + company
        response = requests.get(company_url, headers=headers)
        root = lxml.html.fromstring(response.text)
        news_rows = root.xpath("//table[@id='news-table']/tr")

        cur_date = None
        cur_time = None
        days_visited = 0

        for row in news_rows:
            time_extract = row.xpath("./td")[0].text_content()
            if re.match(date_pattern, time_extract.split()[0]):
                if "Today" in time_extract:
                    cur_date = date.today()
                    cur_date = cur_date.strftime("%b-%d-%y")
                    cur_time = time_extract.split()[1]
                else:
                    cur_date = time_extract.split()[0]
                    cur_time = time_extract.split()[1]
                days_visited += 1

                if days_visited > max_days:
                    print(f"Maximum Days Reached For {company}")
                    break
            #print(row.xpath(".//a[@target='_blank']"))
            headline = row.xpath(".//a[@target='_blank']/text()")
            if headline:
                headline = headline[0]
                url = row.xpath(".//a[@target='_blank']/@href")
                data.append([cur_date, cur_time, company, headline, url[0]])
            else:
                print(f"Private News")


    return pd.DataFrame(data, columns=["Date", "Time", "Company", "Headline", "URL"])